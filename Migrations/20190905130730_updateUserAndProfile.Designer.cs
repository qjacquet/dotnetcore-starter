// <auto-generated />
using System;
using DotnetCoreStarter.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DotnetCoreStarter.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190905130730_updateUserAndProfile")]
    partial class updateUserAndProfile
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview4.19216.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DotnetCoreStarter.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<int?>("ProfileId");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DotnetCoreStarter.API.Models.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avatar");

                    b.Property<int?>("ContactId");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<int?>("PersonnalDetailsId");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("PersonnalDetailsId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("DotnetCoreStarter.API.Models.UserProfile+UserProfileContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("UserProfileContact");
                });

            modelBuilder.Entity("DotnetCoreStarter.API.Models.UserProfile+UserProfileContact+ContactAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("Name");

                    b.Property<string>("Number");

                    b.Property<string>("Zipcode");

                    b.HasKey("Id");

                    b.ToTable("ContactAddress");
                });

            modelBuilder.Entity("DotnetCoreStarter.API.Models.UserProfile+UserProfileDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BirthCity");

                    b.Property<string>("BirthCountry");

                    b.Property<string>("BirthDate");

                    b.Property<string>("Nationnality");

                    b.HasKey("Id");

                    b.ToTable("UserProfileDetails");
                });

            modelBuilder.Entity("DotnetCoreStarter.API.Models.Value", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Values");
                });

            modelBuilder.Entity("DotnetCoreStarter.API.Models.User", b =>
                {
                    b.HasOne("DotnetCoreStarter.API.Models.UserProfile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId");
                });

            modelBuilder.Entity("DotnetCoreStarter.API.Models.UserProfile", b =>
                {
                    b.HasOne("DotnetCoreStarter.API.Models.UserProfile+UserProfileContact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId");

                    b.HasOne("DotnetCoreStarter.API.Models.UserProfile+UserProfileDetails", "PersonnalDetails")
                        .WithMany()
                        .HasForeignKey("PersonnalDetailsId");
                });

            modelBuilder.Entity("DotnetCoreStarter.API.Models.UserProfile+UserProfileContact", b =>
                {
                    b.HasOne("DotnetCoreStarter.API.Models.UserProfile+UserProfileContact+ContactAddress", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");
                });
#pragma warning restore 612, 618
        }
    }
}
